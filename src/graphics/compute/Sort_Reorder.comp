// Sort_Reorder.comp
#version 450
layout (local_size_x = 128) in;

layout(std430, binding = 1) readonly  buffer InKeys   { uint  keysIn[];   };
layout(std430, binding = 2) readonly  buffer InVals   { uint  valsIn[];   };
layout(std430, binding = 3) readonly  buffer Bits     { uint  bits[];     };
layout(std430, binding = 4) readonly  buffer Scan     { uint  scan[];     };
layout(std430, binding = 7) writeonly buffer OutKeys  { uint  keysOut[];  };
layout(std430, binding = 8) writeonly buffer OutVals  { uint  valsOut[];  };

uniform uint uTotalFalses;   // nº de ceros
uniform uint uNumElements;

void main()
{
    uint i = gl_GlobalInvocationID.x;
    if (i >= uNumElements) return;

    bool isOne = bits[i] == 1u;

    uint target;
    if(!isOne){
        target = i - scan[i];                 // ceros al principio
    }else{
        target = uTotalFalses + scan[i];      // unos detrás
    }

    keysOut[target] = keysIn[i];
    valsOut[target] = valsIn[i];
}
