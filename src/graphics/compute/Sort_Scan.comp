#version 460
layout(local_size_x = 128) in;

// Añadir uniforme para el número de elementos
uniform uint uNumElements;

layout(std430, binding = 1) buffer BitMask {
    uint bits[];
};

layout(std430, binding = 3) buffer Scan {
    uint scan[];
};

shared uint temp[128];

void main()
{
    uint gid = gl_GlobalInvocationID.x;
    uint lid = gl_LocalInvocationID.x;

    // Inicializar temp con 0 si está fuera de los límites
    temp[lid] = (gid < uNumElements) ? bits[gid] : 0;
    memoryBarrierShared();
    barrier();

    // Blelloch scan
    for (uint offset = 1; offset < 128; offset *= 2) {
        uint t = (lid >= offset) ? temp[lid - offset] : 0;
        barrier();
        temp[lid] += t;
        barrier();
    }

    // Convertir a exclusive scan
    uint exclusive = (lid == 0) ? 0 : temp[lid - 1];
    barrier();
    if (gid < uNumElements) {
        scan[gid] = exclusive;
    }
}