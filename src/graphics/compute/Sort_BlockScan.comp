#version 450
layout(local_size_x = 128) in;

layout(std430, binding = 2) readonly  buffer Bits { uint bits[]; };
layout(std430, binding = 3) writeonly buffer Scan { uint scan[]; };
layout(std430, binding = 4)         buffer Sums { uint sums[]; };

uniform uint uNumElements;

shared uint sData[gl_WorkGroupSize.x];

void main()
{
    uint gid   = gl_GlobalInvocationID.x;
    uint lid   = gl_LocalInvocationID.x;
    uint group = gl_WorkGroupID.x;

    bool isValid = gid < uNumElements;          // ← NUEVO nombre
    uint v = isValid ? bits[gid] : 0u;

    /* cargar al shared */
    sData[lid] = v;
    memoryBarrierShared(); barrier();

    /* upsweep inclusivo */
    for (uint off = 1u; off < gl_WorkGroupSize.x; off <<= 1u) {
        uint tmp = (lid >= off) ? sData[lid - off] : 0u;
        barrier();
        sData[lid] += tmp;
        barrier();
    }

    /* exclusivo + escritura */
    uint excl = (lid == 0u) ? 0u : sData[lid - 1u];
    if (isValid)
        scan[gid] = excl;

    barrier();                       // todos llegan
    if (lid == gl_WorkGroupSize.x - 1u)
        sums[group] = sData[lid];
}
